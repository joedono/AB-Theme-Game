function strikeEnemy(e,a){a.getData("dead")||(increaseScore(),a.setData("dead",!0))}function increaseScore(){score+=15,scoreText.setText("Blood Spilled: "+score)}function playerSwordSwingComplete(e,a){player.swingingSword=!1,playerSword.setPosition(-100,-100)}var DEBUG=!1,SCREEN_WIDTH=480,SCREEN_HEIGHT=480,PLAYER_SPEED=200,PLAYER_SWING_SWORD_KEY=Phaser.Input.Keyboard.KeyCodes.Z,PLAYER_SWORD_LENGTH=15,ENEMY_OFFSET_X=8,ENEMY_OFFSET_Y=8,ENEMY_PATH_TIMER=10,ENEMY_DEATH_TIME=.5,ENEMY_MIN_SPAWN_TIMER=.5,ENEMY_MAX_SPAWN_TIMER=2,ENEMY_MAX_DIFFICULTY_SCORE=1500,FAMILY_PANIC_DISTANCE=60;Player=function(e){this.game=e,this.sprite=e.physics.add.sprite(250,275,"player"),this.sprite.setCollideWorldBounds(!0),this.sprite.setDepth(3),e.anims.create({key:"playerRight",frames:[{key:"player",frame:0}],frameRate:20}),e.anims.create({key:"playerUp",frames:[{key:"player",frame:1}],frameRate:20}),e.anims.create({key:"playerLeft",frames:[{key:"player",frame:2}],frameRate:20}),e.anims.create({key:"playerDown",frames:[{key:"player",frame:3}],frameRate:20}),this.swingingSword=!1,this.swordSwingKey=e.input.keyboard.addKey(PLAYER_SWING_SWORD_KEY)},Player.prototype={update:function(){this.move(),this.swingingSword?this.moveSword():Phaser.Input.Keyboard.JustDown(this.swordSwingKey)&&this.swingSword()},move:function(){var e=0,a=0;cursors.left.isDown&&(e-=1),cursors.right.isDown&&(e+=1),cursors.up.isDown&&(a-=1),cursors.down.isDown&&(a+=1),e<0&&this.sprite.anims.play("playerLeft",!0),e>0&&this.sprite.anims.play("playerRight",!0),a<0&&this.sprite.anims.play("playerUp",!0),a>0&&this.sprite.anims.play("playerDown",!0);var t=new Phaser.Math.Vector2(e,a);t.normalize(),t.scale(PLAYER_SPEED),this.sprite.body.setVelocityX(t.x),this.sprite.body.setVelocityY(t.y)},swingSword:function(){this.swingingSword=!0,this.moveSword(),playerSword.play("swordStrike",!0,0)},moveSword:function(){var e=this.getSwordCoordinates(),a=this.sprite.x+e.x,t=this.sprite.y+e.y,i=e.angle();playerSword.setPosition(a,t),playerSword.setRotation(i)},getSwordCoordinates:function(){var e=new Phaser.Math.Vector2,a=this.sprite.body.velocity.clone(),t=0,i=0;if(0==a.length()){switch(this.sprite.anims.getCurrentKey()){case"playerLeft":t-=1;break;case"playerRight":t+=1;break;case"playerUp":i-=1;break;case"playerDown":i+=1;break;default:t+=1}e.x=t,e.y=i}else e.x=a.x,e.y=a.y;return e.normalize(),e.scale(PLAYER_SWORD_LENGTH),e}},Enemies=function(e){this.game=e,e.anims.create({key:"enemyRight",frames:[{key:"enemy",frame:0}],frameRate:20}),e.anims.create({key:"enemyUp",frames:[{key:"enemy",frame:1}],frameRate:20}),e.anims.create({key:"enemyLeft",frames:[{key:"enemy",frame:2}],frameRate:20}),e.anims.create({key:"enemyDown",frames:[{key:"enemy",frame:3}],frameRate:20}),e.anims.create({key:"enemyInvincible",frames:[{key:"enemy",frame:4}],frameRate:20}),this.enemies=e.physics.add.group(),this.buildPaths(),e.physics.add.collider(this.enemies,walls),e.physics.add.collider(playerSword,this.enemies,strikeEnemy),this.spawnTimer=ENEMY_MAX_SPAWN_TIMER,this.spawnEnemy()},Enemies.prototype={update:function(e){e/=1e3,this.updateSpawnTimer(e),this.updateEnemies(this.game,e)},buildPaths:function(){var e=new Array,a=new Array;a.push(map.getObjectLayer("Paths Basic").objects),a.push(map.getObjectLayer("Paths Simple").objects),a.push(map.getObjectLayer("Paths Simple Longer").objects),a.push(map.getObjectLayer("Paths Medium Vertical").objects),a.push(map.getObjectLayer("Paths Medium Horizontal").objects),a.push(map.getObjectLayer("Paths Complex One").objects),a.push(map.getObjectLayer("Paths Complex Two").objects),a.push(map.getObjectLayer("Paths Complex Three").objects),a.forEach(function(a){a.forEach(function(a){var t=a.x,i=a.y,s=a.polyline,r=new Array,n=new Array;s.forEach(function(e){r.push(t+e.x),n.push(i+e.y)}),e.push({x:r,y:n})})}),this.paths=e},updateSpawnTimer:function(e){this.spawnTimer-=e,this.spawnTimer<=0&&(this.spawnEnemy(),this.resetSpawnTimer())},spawnEnemy:function(){var e=this.paths[Phaser.Math.RND.between(0,this.paths.length-1)],a=e.x[0],t=e.y[0],i=this.enemies.create(a,t,"enemy");i.setDepth(2),i.setData("path",e),i.setData("timer",0),i.setData("dead",!1),i.setData("deathTimer",ENEMY_DEATH_TIME)},updateEnemies:function(e,a){var t=!1;this.enemies.children.iterate(function(e){var i=e.getData("timer"),s=e.getData("dead"),r=e.getData("deathTimer");if(s)e.anims.play("enemyInvincible",!0),r-=a,e.setData("deathTimer",r);else if(i<ENEMY_PATH_TIMER){var n=new Phaser.Geom.Point(e.x,e.y),o=e.getData("path");i+=a;var m=i/ENEMY_PATH_TIMER,h=new Phaser.Geom.Point(Phaser.Math.Interpolation.Linear(o.x,m),Phaser.Math.Interpolation.Linear(o.y,m)),l=Phaser.Math.Angle.BetweenPoints(n,h);l<0&&(l+=Phaser.Math.PI2);var y="enemyUp";l<1*Math.PI/4||l>7*Math.PI/4?y="enemyRight":l<3*Math.PI/4&&l>1*Math.PI/4?y="enemyDown":l<5*Math.PI/4&&l>3*Math.PI/4&&(y="enemyLeft"),e.x=h.x,e.y=h.y,e.setData("timer",i),e.anims.play(y,!0)}else t=!0}),t&&this.game.loseGame(),this.enemies.children.iterate(function(e){if(e){e.getData("deathTimer")<=0&&e.destroy()}})},resetSpawnTimer:function(){if(score>ENEMY_MAX_DIFFICULTY_SCORE)this.spawnTimer=ENEMY_MIN_SPAWN_TIMER;else{var e=score/ENEMY_MAX_DIFFICULTY_SCORE,a=[ENEMY_MAX_SPAWN_TIMER,ENEMY_MIN_SPAWN_TIMER];this.spawnTimer=Phaser.Math.Interpolation.Linear(a,e)}},closingIn:function(e,a,t){var i=!1;return this.enemies.children.iterate(function(s){Phaser.Math.Distance.Between(s.x,s.y,e,a)<t&&(i=!0)}),i}};var scenePlaying=new Phaser.Scene("Playing");scenePlaying.preload=function(){this.load.tilemapTiledJSON("map","/images/game/config/map.json"),this.load.spritesheet("floor","/images/game/image/floor.png",{frameWidth:8,frameHeight:8}),this.load.image("wall","/images/game/image/wall.png"),this.load.spritesheet("player","/images/game/image/player.png",{frameWidth:16,frameHeight:16}),this.load.spritesheet("enemy","/images/game/image/enemy.png",{frameWidth:16,frameHeight:16}),this.load.spritesheet("family","/images/game/image/family.png",{frameWidth:16,frameHeight:16}),this.load.spritesheet("sword-strike","/images/game/image/sword-strike.png",{frameWidth:24,frameHeight:24})},scenePlaying.create=function(){cursors=this.input.keyboard.createCursorKeys(),score=0,this.anims.create({key:"familyCalm",frames:[{key:"family",frame:0}],frameRate:20}),this.anims.create({key:"familyScared",frames:[{key:"family",frame:1}],frameRate:20}),this.anims.create({key:"familyDead",frames:[{key:"family",frame:2}],frameRate:20}),this.anims.create({key:"swordStrike",frames:this.anims.generateFrameNumbers("sword-strike",{start:0,end:3}),frameRate:30}),map=this.make.tilemap({key:"map"});var e=map.addTilesetImage("Floor","floor");floorLayer=map.createStaticLayer("Floor",e,0,0),this.buildWalls(),playerSword=this.physics.add.sprite(-100,-100,"sword-strike"),playerSword.on("animationcomplete",playerSwordSwingComplete,playerSword),player=new Player(this),enemies=new Enemies(this),family=this.physics.add.sprite(240,240,"family"),family.setDepth(4),family.anims.play("familyCalm",!0),this.physics.add.collider(player.sprite,walls),scoreText=this.add.text(8,5,"Blood Spilled: "+score,{fontSize:"12px",fill:"#FFF"}),this.playing=!0},scenePlaying.buildWalls=function(){var e=map.getObjectLayer("Walls").objects;walls=this.physics.add.staticGroup(),e.forEach(function(e){var a=walls.create(e.x,e.y,"wall");a.setScale(e.width/8,e.height/8),a.setOrigin(0),a.setDepth(1),a.body.width=e.width,a.body.height=e.height}),walls.refresh()},scenePlaying.update=function(e,a){this.playing&&(player.update(),enemies.update(a),this.updateFamily())},scenePlaying.updateFamily=function(){if(this.playing){var e="familyCalm";enemies.closingIn(family.x,family.y,FAMILY_PANIC_DISTANCE)&&(e="familyScared"),family.anims.play(e,!0)}},scenePlaying.loseGame=function(){family.anims.play("familyDead",!0),this.playing=!1,this.scene.launch("GameOver")};var sceneGameOver=new Phaser.Scene("GameOver"),highScores=new Array;sceneGameOver.preload=function(){this.load.image("background","/images/game/image/background.png")},sceneGameOver.create=function(){this.physics.add.sprite(SCREEN_WIDTH,SCREEN_HEIGHT,"background").setScale(SCREEN_WIDTH,SCREEN_HEIGHT),this.add.text(140,20,"Game Over",{fontSize:"38px",fill:"#000",fontStyle:"bold"}),this.add.text(160,100,"High Scores",{fontSize:"24px",fill:"#000",fontStyle:"bold"}),this.add.text(60,420,"Refresh page to try again",{fontSize:"24px",fill:"#000",fontStyle:"bold"});var e=prompt("Please enter your initials for high score","AAA");null==e&&(e="AAA"),e=e.substring(0,3),DEBUG||this.postHighScore(e)},sceneGameOver.postHighScore=function(e){var a=this;$.post("/game/highscore",{name:e,score:score}).done(function(e){highScores=e;var t={fontSize:"18px",fill:"#000",fontStyle:"bold"};highScores.forEach(function(e,i){a.add.text(170,150+20*i,e.name.toUpperCase(),t),a.add.text(260,150+20*i,e.score,t)})})},sceneGameOver.inputFocus=function(e){e.canvasInput.focus()},sceneGameOver.update=function(e,a){};var config={type:Phaser.AUTO,width:SCREEN_WIDTH,height:SCREEN_HEIGHT,parent:"game",physics:{default:"arcade",arcade:{debug:!1}},scene:[scenePlaying,sceneGameOver]},game=new Phaser.Game(config),map,floorLayer,walls,player,playerSword,family,enemies,score=0,scoreText,cursors;